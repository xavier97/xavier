/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Directive, Input, ElementRef, Renderer2 } from '@angular/core';
export class UILazyloadDirective {
    /**
     * @param {?} el
     * @param {?} renderer
     */
    constructor(el, renderer) {
        this.el = el;
        this.renderer = renderer;
    }
    /**
     * @return {?}
     */
    load() {
        /** @type {?} */
        const img = this.el.nativeElement;
        if (img.src) {
            return;
        }
        img.src = this.imgUrl;
    }
}
UILazyloadDirective.decorators = [
    { type: Directive, args: [{
                selector: '[libUiLazyLoad]',
                exportAs: 'ui-lazy-load'
            },] }
];
/** @nocollapse */
UILazyloadDirective.ctorParameters = () => [
    { type: ElementRef },
    { type: Renderer2 }
];
UILazyloadDirective.propDecorators = {
    imgUrl: [{ type: Input, args: ['imgUrl',] }]
};
if (false) {
    /**
     * @type {?}
     * @private
     */
    UILazyloadDirective.prototype.imgUrl;
    /**
     * @type {?}
     * @private
     */
    UILazyloadDirective.prototype.el;
    /**
     * @type {?}
     * @private
     */
    UILazyloadDirective.prototype.renderer;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidWktbGF6eS1sb2FkLmRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC11aS1jYXJvdXNlbC8iLCJzb3VyY2VzIjpbImxpYi9kaXJlY3RpdmVzL3VpLWxhenktbG9hZC5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLFVBQVUsRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFNeEUsTUFBTSxPQUFPLG1CQUFtQjs7Ozs7SUFJOUIsWUFBb0IsRUFBYyxFQUFVLFFBQW1CO1FBQTNDLE9BQUUsR0FBRixFQUFFLENBQVk7UUFBVSxhQUFRLEdBQVIsUUFBUSxDQUFXO0lBQUcsQ0FBQzs7OztJQUU1RCxJQUFJOztjQUNELEdBQUcsR0FBRyxJQUFJLENBQUMsRUFBRSxDQUFDLGFBQWE7UUFDakMsSUFBSSxHQUFHLENBQUMsR0FBRyxFQUFFO1lBQ1gsT0FBTztTQUNSO1FBQ0QsR0FBRyxDQUFDLEdBQUcsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDO0lBQzFCLENBQUM7OztZQWhCRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLGlCQUFpQjtnQkFDM0IsUUFBUSxFQUFFLGNBQWM7YUFDekI7Ozs7WUFMMEIsVUFBVTtZQUFFLFNBQVM7OztxQkFRN0MsS0FBSyxTQUFDLFFBQVE7Ozs7Ozs7SUFBZixxQ0FBd0M7Ozs7O0lBRTVCLGlDQUFzQjs7Ozs7SUFBRSx1Q0FBMkIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaXJlY3RpdmUsIElucHV0LCBFbGVtZW50UmVmLCBSZW5kZXJlcjIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuXHJcbkBEaXJlY3RpdmUoe1xyXG4gIHNlbGVjdG9yOiAnW2xpYlVpTGF6eUxvYWRdJyxcclxuICBleHBvcnRBczogJ3VpLWxhenktbG9hZCdcclxufSlcclxuZXhwb3J0IGNsYXNzIFVJTGF6eWxvYWREaXJlY3RpdmUge1xyXG4gIC8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTpuby1pbnB1dC1yZW5hbWVcclxuICBASW5wdXQoJ2ltZ1VybCcpIHByaXZhdGUgaW1nVXJsOiBzdHJpbmc7XHJcblxyXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgZWw6IEVsZW1lbnRSZWYsIHByaXZhdGUgcmVuZGVyZXI6IFJlbmRlcmVyMikge31cclxuXHJcbiAgcHVibGljIGxvYWQoKSB7XHJcbiAgICAgIGNvbnN0IGltZyA9IHRoaXMuZWwubmF0aXZlRWxlbWVudDtcclxuICAgICAgaWYgKGltZy5zcmMpIHtcclxuICAgICAgICByZXR1cm47XHJcbiAgICAgIH1cclxuICAgICAgaW1nLnNyYyA9IHRoaXMuaW1nVXJsO1xyXG4gIH1cclxufVxyXG4iXX0=