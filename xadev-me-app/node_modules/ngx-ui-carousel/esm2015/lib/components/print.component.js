/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, Output, EventEmitter, ElementRef, Renderer2 } from '@angular/core';
import { UiCarouselColorConfig } from '../color-config.class';
export class PrintButtonComponent {
    /**
     * @param {?} _el
     * @param {?} _renderer2
     */
    constructor(_el, _renderer2) {
        this._el = _el;
        this._renderer2 = _renderer2;
        this.disabled = true;
        this.colorConfig = new UiCarouselColorConfig();
        this.onButtonClick = new EventEmitter();
    }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
    /**
     * @return {?}
     */
    onClick() {
        if (!this.disabled) {
            this.onButtonClick.emit();
        }
    }
}
PrintButtonComponent.decorators = [
    { type: Component, args: [{
                // tslint:disable-next-line:component-selector
                selector: 'print-button',
                template: `
    <div #printButton
    class="print-button"
    (click)="onClick()"
    [ngClass]="{'disabled': disabled}"
    [ngStyle]="{'background-color': colorConfig.printButtonBackgroundColor}">
      <span [ngStyle]="{'color': colorConfig.printButtonFontColor}">print</span>
    </div>
  `,
                styles: [`
  .print-button {
    position: absolute;
    height: 30px;
    line-height: 30px;
    text-align: center;
    border-radius: 5px;
    width: 60px;
    opacity: .6;
    user-select: none;
    -moz-user-select: none;
    -khtml-user-select: none;
    -webkit-user-select: none;
    -o-user-select: none;
    z-index: 1000;
    right: 20px;
    top: 20px;
  }

  .print-button.disabled{
    opacity: .4;
  }
  .print-button:hover{
    opacity: .9;
    cursor: pointer;
  }
  .print-button.disabled:hover{
    opacity: .4;
    cursor: pointer;
  }`]
            }] }
];
/** @nocollapse */
PrintButtonComponent.ctorParameters = () => [
    { type: ElementRef },
    { type: Renderer2 }
];
PrintButtonComponent.propDecorators = {
    dir: [{ type: Input }],
    disabled: [{ type: Input }],
    colorConfig: [{ type: Input }],
    onButtonClick: [{ type: Output }]
};
if (false) {
    /** @type {?} */
    PrintButtonComponent.prototype.dir;
    /** @type {?} */
    PrintButtonComponent.prototype.disabled;
    /** @type {?} */
    PrintButtonComponent.prototype.colorConfig;
    /** @type {?} */
    PrintButtonComponent.prototype.onButtonClick;
    /** @type {?} */
    PrintButtonComponent.prototype.styling;
    /** @type {?} */
    PrintButtonComponent.prototype.styleElement;
    /**
     * @type {?}
     * @private
     */
    PrintButtonComponent.prototype._el;
    /**
     * @type {?}
     * @private
     */
    PrintButtonComponent.prototype._renderer2;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJpbnQuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LXVpLWNhcm91c2VsLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvcHJpbnQuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsWUFBWSxFQUFFLFVBQVUsRUFBRSxTQUFTLEVBQVUsTUFBTSxlQUFlLENBQUM7QUFDdEcsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUE4QzlELE1BQU0sT0FBTyxvQkFBb0I7Ozs7O0lBVS9CLFlBQW9CLEdBQWUsRUFBVSxVQUFxQjtRQUE5QyxRQUFHLEdBQUgsR0FBRyxDQUFZO1FBQVUsZUFBVSxHQUFWLFVBQVUsQ0FBVztRQVJ6RCxhQUFRLEdBQUcsSUFBSSxDQUFDO1FBQ2hCLGdCQUFXLEdBQUcsSUFBSSxxQkFBcUIsRUFBRSxDQUFDO1FBRXpDLGtCQUFhLEdBQXNCLElBQUksWUFBWSxFQUFPLENBQUM7SUFLQyxDQUFDOzs7O0lBRXZFLFFBQVE7SUFDUixDQUFDOzs7O0lBRUQsT0FBTztRQUNMLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxFQUFFO1lBQ2xCLElBQUksQ0FBQyxhQUFhLENBQUMsSUFBSSxFQUFFLENBQUM7U0FDM0I7SUFDSCxDQUFDOzs7WUEvREYsU0FBUyxTQUFDOztnQkFFVCxRQUFRLEVBQUUsY0FBYztnQkFDeEIsUUFBUSxFQUFFOzs7Ozs7OztHQVFUO3lCQUNROzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztJQTZCUDthQUNIOzs7O1lBN0NnRCxVQUFVO1lBQUUsU0FBUzs7O2tCQWdEbkUsS0FBSzt1QkFDTCxLQUFLOzBCQUNMLEtBQUs7NEJBRUwsTUFBTTs7OztJQUpQLG1DQUFxQjs7SUFDckIsd0NBQXlCOztJQUN6QiwyQ0FBbUQ7O0lBRW5ELDZDQUFxRTs7SUFFckUsdUNBQXVCOztJQUN2Qiw0Q0FBeUI7Ozs7O0lBRWIsbUNBQXVCOzs7OztJQUFFLDBDQUE2QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIE91dHB1dCwgRXZlbnRFbWl0dGVyLCBFbGVtZW50UmVmLCBSZW5kZXJlcjIsIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBVaUNhcm91c2VsQ29sb3JDb25maWcgfSBmcm9tICcuLi9jb2xvci1jb25maWcuY2xhc3MnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOmNvbXBvbmVudC1zZWxlY3RvclxyXG4gIHNlbGVjdG9yOiAncHJpbnQtYnV0dG9uJyxcclxuICB0ZW1wbGF0ZTogYFxyXG4gICAgPGRpdiAjcHJpbnRCdXR0b25cclxuICAgIGNsYXNzPVwicHJpbnQtYnV0dG9uXCJcclxuICAgIChjbGljayk9XCJvbkNsaWNrKClcIlxyXG4gICAgW25nQ2xhc3NdPVwieydkaXNhYmxlZCc6IGRpc2FibGVkfVwiXHJcbiAgICBbbmdTdHlsZV09XCJ7J2JhY2tncm91bmQtY29sb3InOiBjb2xvckNvbmZpZy5wcmludEJ1dHRvbkJhY2tncm91bmRDb2xvcn1cIj5cclxuICAgICAgPHNwYW4gW25nU3R5bGVdPVwieydjb2xvcic6IGNvbG9yQ29uZmlnLnByaW50QnV0dG9uRm9udENvbG9yfVwiPnByaW50PC9zcGFuPlxyXG4gICAgPC9kaXY+XHJcbiAgYCxcclxuICBzdHlsZXM6IFtgXHJcbiAgLnByaW50LWJ1dHRvbiB7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBoZWlnaHQ6IDMwcHg7XHJcbiAgICBsaW5lLWhlaWdodDogMzBweDtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICAgIHdpZHRoOiA2MHB4O1xyXG4gICAgb3BhY2l0eTogLjY7XHJcbiAgICB1c2VyLXNlbGVjdDogbm9uZTtcclxuICAgIC1tb3otdXNlci1zZWxlY3Q6IG5vbmU7XHJcbiAgICAta2h0bWwtdXNlci1zZWxlY3Q6IG5vbmU7XHJcbiAgICAtd2Via2l0LXVzZXItc2VsZWN0OiBub25lO1xyXG4gICAgLW8tdXNlci1zZWxlY3Q6IG5vbmU7XHJcbiAgICB6LWluZGV4OiAxMDAwO1xyXG4gICAgcmlnaHQ6IDIwcHg7XHJcbiAgICB0b3A6IDIwcHg7XHJcbiAgfVxyXG5cclxuICAucHJpbnQtYnV0dG9uLmRpc2FibGVke1xyXG4gICAgb3BhY2l0eTogLjQ7XHJcbiAgfVxyXG4gIC5wcmludC1idXR0b246aG92ZXJ7XHJcbiAgICBvcGFjaXR5OiAuOTtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICB9XHJcbiAgLnByaW50LWJ1dHRvbi5kaXNhYmxlZDpob3ZlcntcclxuICAgIG9wYWNpdHk6IC40O1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gIH1gXVxyXG59KVxyXG5cclxuZXhwb3J0IGNsYXNzIFByaW50QnV0dG9uQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcclxuICBASW5wdXQoKSBkaXI6IHN0cmluZztcclxuICBASW5wdXQoKSBkaXNhYmxlZCA9IHRydWU7XHJcbiAgQElucHV0KCkgY29sb3JDb25maWcgPSBuZXcgVWlDYXJvdXNlbENvbG9yQ29uZmlnKCk7XHJcblxyXG4gIEBPdXRwdXQoKSBvbkJ1dHRvbkNsaWNrOiBFdmVudEVtaXR0ZXI8YW55PiA9IG5ldyBFdmVudEVtaXR0ZXI8YW55PigpO1xyXG5cclxuICBwdWJsaWMgc3R5bGluZzogc3RyaW5nO1xyXG4gIHB1YmxpYyBzdHlsZUVsZW1lbnQ6IGFueTtcclxuXHJcbiAgY29uc3RydWN0b3IocHJpdmF0ZSBfZWw6IEVsZW1lbnRSZWYsIHByaXZhdGUgX3JlbmRlcmVyMjogUmVuZGVyZXIyKSB7IH1cclxuXHJcbiAgbmdPbkluaXQoKTogdm9pZCB7XHJcbiAgfVxyXG5cclxuICBvbkNsaWNrKCkge1xyXG4gICAgaWYgKCF0aGlzLmRpc2FibGVkKSB7XHJcbiAgICAgIHRoaXMub25CdXR0b25DbGljay5lbWl0KCk7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuIl19