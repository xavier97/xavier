/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, Output, EventEmitter, ElementRef, Renderer2 } from '@angular/core';
import { UiCarouselColorConfig } from '../color-config.class';
var ArrowComponent = /** @class */ (function () {
    function ArrowComponent(_el, _renderer2) {
        this._el = _el;
        this._renderer2 = _renderer2;
        this.disabled = true;
        this.onArrowClick = new EventEmitter();
    }
    Object.defineProperty(ArrowComponent.prototype, "colorConfig", {
        get: /**
         * @return {?}
         */
        function () {
            return this._colorConfig;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._colorConfig = value;
            this.createStyle();
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    ArrowComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        if (!this._colorConfig) {
            this.colorConfig = new UiCarouselColorConfig();
        }
    };
    /**
     * @return {?}
     */
    ArrowComponent.prototype.onClick = /**
     * @return {?}
     */
    function () {
        if (!this.disabled) {
            this.onArrowClick.emit();
            this.createStyle();
        }
    };
    /**
     * @return {?}
     */
    ArrowComponent.prototype.createStyle = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var styling = "\n      .arrow::before, .arrow::after {\n        background: " + this.colorConfig.arrowColor + ";\n      }\n      ";
        if (this.styleElement) {
            this._renderer2.removeChild(this._renderer2.parentNode(this.styleElement), this.styleElement);
        }
        this.styleElement = this._renderer2.createElement('style');
        this.styleElement.appendChild(this._renderer2.createText(styling));
        this._el.nativeElement.appendChild(this.styleElement);
    };
    ArrowComponent.decorators = [
        { type: Component, args: [{
                    // tslint:disable-next-line:component-selector
                    selector: 'arrow',
                    template: "\n    <div #arrow class=\"arrow\" (click)=\"onClick()\"\n      [ngClass]=\"{'left': dir === 'left', 'right': dir === 'right', 'disabled': disabled}\">\n      <style #shadow-styling [innerHTML]=\"styling\">\n      </style>\n      </div>\n  ",
                    styles: ["\n  .arrow {\n    position: absolute;\n    height: 50px;\n    width: 30px;\n    opacity: .6;\n    user-select: none;\n    -moz-user-select: none;\n    -khtml-user-select: none;\n    -webkit-user-select: none;\n    -o-user-select: none;\n    z-index: 1000;\n  }\n\n  .arrow.right {\n    right: 15px;\n    top: 50%;\n\n    transform: scaleX(-1) translateY(-50%);\n    -moz-transform: scaleX(-1) translateY(-50%);\n    -o-transform: scaleX(-1) translateY(-50%);\n    -webkit-transform: scaleX(-1) translateY(-50%);\n    -ms-transform: scaleX(-1) translateY(-50%);\n    filter: FlipH;\n    -ms-filter: \"FlipH\";\n  }\n\n  .arrow.left{\n    left: 15px;\n    top: 50%;\n    transform: translateY(-50%);\n    -moz-transform: translateY(-50%);\n    -webkit-transform: translateY(-50%);\n    -o-transform: translateY(-50%);\n    -ms-transform: translateY(-50%);\n  }\n\n  .arrow:hover{\n    opacity: .8;\n    cursor: pointer;\n  }\n\n  .arrow:before{\n    content: \"\";\n    height: 3px;\n    width: 30px;\n    display: block;\n    position: absolute;\n    top: 14px;\n    transform: rotate(-45deg);\n    -moz-transform: rotate(-45deg);\n    -webkit-transform: rotate(-45deg);\n    -o-transform: rotate(-45deg);\n    -ms-transform: rotate(-45deg);\n  }\n  .arrow:after{\n    content: \"\";\n    height: 3px;\n    width: 30px;\n    display: block;\n    transform: rotate(45deg);\n    -moz-transform: rotate(45deg);\n    -webkit-transform: rotate(45deg);\n    -o-transform: rotate(45deg);\n    -ms-transform: rotate(45deg);\n    position: absolute;\n    bottom: 14px;\n  }\n  .arrow.disabled{\n    opacity: .4;\n  }\n  .arrow.disabled:hover{\n    opacity: .4;\n    cursor: pointer;\n  }"]
                }] }
    ];
    /** @nocollapse */
    ArrowComponent.ctorParameters = function () { return [
        { type: ElementRef },
        { type: Renderer2 }
    ]; };
    ArrowComponent.propDecorators = {
        dir: [{ type: Input }],
        disabled: [{ type: Input }],
        colorConfig: [{ type: Input, args: ['colorConfig',] }],
        onArrowClick: [{ type: Output }]
    };
    return ArrowComponent;
}());
export { ArrowComponent };
if (false) {
    /** @type {?} */
    ArrowComponent.prototype.dir;
    /** @type {?} */
    ArrowComponent.prototype.disabled;
    /** @type {?} */
    ArrowComponent.prototype.onArrowClick;
    /** @type {?} */
    ArrowComponent.prototype.styling;
    /** @type {?} */
    ArrowComponent.prototype.styleElement;
    /**
     * @type {?}
     * @private
     */
    ArrowComponent.prototype._colorConfig;
    /**
     * @type {?}
     * @private
     */
    ArrowComponent.prototype._el;
    /**
     * @type {?}
     * @private
     */
    ArrowComponent.prototype._renderer2;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXJyb3cuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LXVpLWNhcm91c2VsLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvYXJyb3cuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsWUFBWSxFQUFFLFVBQVUsRUFBRSxTQUFTLEVBQXFCLE1BQU0sZUFBZSxDQUFDO0FBQ2pILE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBRTlEO0lBNEdFLHdCQUFvQixHQUFlLEVBQVUsVUFBcUI7UUFBOUMsUUFBRyxHQUFILEdBQUcsQ0FBWTtRQUFVLGVBQVUsR0FBVixVQUFVLENBQVc7UUFqQnpELGFBQVEsR0FBRyxJQUFJLENBQUM7UUFVZixpQkFBWSxHQUFzQixJQUFJLFlBQVksRUFBTyxDQUFDO0lBT0UsQ0FBQztJQWhCdkUsc0JBQ0ksdUNBQVc7Ozs7UUFEZjtZQUVFLE9BQU8sSUFBSSxDQUFDLFlBQVksQ0FBQztRQUMzQixDQUFDOzs7OztRQUNELFVBQWdCLEtBQTRCO1lBQzFDLElBQUksQ0FBQyxZQUFZLEdBQUcsS0FBSyxDQUFDO1lBQzFCLElBQUksQ0FBQyxXQUFXLEVBQUUsQ0FBQztRQUNyQixDQUFDOzs7T0FKQTs7OztJQWVELGlDQUFROzs7SUFBUjtRQUNFLElBQUksQ0FBQyxJQUFJLENBQUMsWUFBWSxFQUFFO1lBQ3RCLElBQUksQ0FBQyxXQUFXLEdBQUcsSUFBSSxxQkFBcUIsRUFBRSxDQUFDO1NBQ2hEO0lBQ0gsQ0FBQzs7OztJQUVELGdDQUFPOzs7SUFBUDtRQUNFLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxFQUFFO1lBQ2xCLElBQUksQ0FBQyxZQUFZLENBQUMsSUFBSSxFQUFFLENBQUM7WUFDekIsSUFBSSxDQUFDLFdBQVcsRUFBRSxDQUFDO1NBQ3BCO0lBQ0gsQ0FBQzs7OztJQUVELG9DQUFXOzs7SUFBWDs7WUFDUSxPQUFPLEdBQUcsa0VBRUUsSUFBSSxDQUFDLFdBQVcsQ0FBQyxVQUFVLHVCQUUxQztRQUVELElBQUksSUFBSSxDQUFDLFlBQVksRUFBRTtZQUNyQixJQUFJLENBQUMsVUFBVSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLEVBQUUsSUFBSSxDQUFDLFlBQVksQ0FBQyxDQUFDO1NBQy9GO1FBRUQsSUFBSSxDQUFDLFlBQVksR0FBRyxJQUFJLENBQUMsVUFBVSxDQUFDLGFBQWEsQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUMzRCxJQUFJLENBQUMsWUFBWSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLFVBQVUsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDO1FBRW5FLElBQUksQ0FBQyxHQUFHLENBQUMsYUFBYSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUM7SUFDMUQsQ0FBQzs7Z0JBMUlGLFNBQVMsU0FBQzs7b0JBRVQsUUFBUSxFQUFFLE9BQU87b0JBQ2pCLFFBQVEsRUFBRSxpUEFNVDs2QkFDUSwrb0RBMEVQO2lCQUNIOzs7O2dCQXhGZ0QsVUFBVTtnQkFBRSxTQUFTOzs7c0JBNkZuRSxLQUFLOzJCQUNMLEtBQUs7OEJBQ0wsS0FBSyxTQUFDLGFBQWE7K0JBU25CLE1BQU07O0lBc0NULHFCQUFDO0NBQUEsQUEzSUQsSUEySUM7U0FwRFksY0FBYzs7O0lBR3pCLDZCQUFxQjs7SUFDckIsa0NBQXlCOztJQVV6QixzQ0FBb0U7O0lBRXBFLGlDQUF1Qjs7SUFDdkIsc0NBQXlCOzs7OztJQUV6QixzQ0FBNEM7Ozs7O0lBRWhDLDZCQUF1Qjs7Ozs7SUFBRSxvQ0FBNkIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBPdXRwdXQsIEV2ZW50RW1pdHRlciwgRWxlbWVudFJlZiwgUmVuZGVyZXIyLCBWaWV3Q2hpbGQsIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBVaUNhcm91c2VsQ29sb3JDb25maWcgfSBmcm9tICcuLi9jb2xvci1jb25maWcuY2xhc3MnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOmNvbXBvbmVudC1zZWxlY3RvclxyXG4gIHNlbGVjdG9yOiAnYXJyb3cnLFxyXG4gIHRlbXBsYXRlOiBgXHJcbiAgICA8ZGl2ICNhcnJvdyBjbGFzcz1cImFycm93XCIgKGNsaWNrKT1cIm9uQ2xpY2soKVwiXHJcbiAgICAgIFtuZ0NsYXNzXT1cInsnbGVmdCc6IGRpciA9PT0gJ2xlZnQnLCAncmlnaHQnOiBkaXIgPT09ICdyaWdodCcsICdkaXNhYmxlZCc6IGRpc2FibGVkfVwiPlxyXG4gICAgICA8c3R5bGUgI3NoYWRvdy1zdHlsaW5nIFtpbm5lckhUTUxdPVwic3R5bGluZ1wiPlxyXG4gICAgICA8L3N0eWxlPlxyXG4gICAgICA8L2Rpdj5cclxuICBgLFxyXG4gIHN0eWxlczogW2BcclxuICAuYXJyb3cge1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgaGVpZ2h0OiA1MHB4O1xyXG4gICAgd2lkdGg6IDMwcHg7XHJcbiAgICBvcGFjaXR5OiAuNjtcclxuICAgIHVzZXItc2VsZWN0OiBub25lO1xyXG4gICAgLW1vei11c2VyLXNlbGVjdDogbm9uZTtcclxuICAgIC1raHRtbC11c2VyLXNlbGVjdDogbm9uZTtcclxuICAgIC13ZWJraXQtdXNlci1zZWxlY3Q6IG5vbmU7XHJcbiAgICAtby11c2VyLXNlbGVjdDogbm9uZTtcclxuICAgIHotaW5kZXg6IDEwMDA7XHJcbiAgfVxyXG5cclxuICAuYXJyb3cucmlnaHQge1xyXG4gICAgcmlnaHQ6IDE1cHg7XHJcbiAgICB0b3A6IDUwJTtcclxuXHJcbiAgICB0cmFuc2Zvcm06IHNjYWxlWCgtMSkgdHJhbnNsYXRlWSgtNTAlKTtcclxuICAgIC1tb3otdHJhbnNmb3JtOiBzY2FsZVgoLTEpIHRyYW5zbGF0ZVkoLTUwJSk7XHJcbiAgICAtby10cmFuc2Zvcm06IHNjYWxlWCgtMSkgdHJhbnNsYXRlWSgtNTAlKTtcclxuICAgIC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZVgoLTEpIHRyYW5zbGF0ZVkoLTUwJSk7XHJcbiAgICAtbXMtdHJhbnNmb3JtOiBzY2FsZVgoLTEpIHRyYW5zbGF0ZVkoLTUwJSk7XHJcbiAgICBmaWx0ZXI6IEZsaXBIO1xyXG4gICAgLW1zLWZpbHRlcjogXCJGbGlwSFwiO1xyXG4gIH1cclxuXHJcbiAgLmFycm93LmxlZnR7XHJcbiAgICBsZWZ0OiAxNXB4O1xyXG4gICAgdG9wOiA1MCU7XHJcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7XHJcbiAgICAtbW96LXRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcclxuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpO1xyXG4gICAgLW8tdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpO1xyXG4gICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcclxuICB9XHJcblxyXG4gIC5hcnJvdzpob3ZlcntcclxuICAgIG9wYWNpdHk6IC44O1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gIH1cclxuXHJcbiAgLmFycm93OmJlZm9yZXtcclxuICAgIGNvbnRlbnQ6IFwiXCI7XHJcbiAgICBoZWlnaHQ6IDNweDtcclxuICAgIHdpZHRoOiAzMHB4O1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICB0b3A6IDE0cHg7XHJcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSgtNDVkZWcpO1xyXG4gICAgLW1vei10cmFuc2Zvcm06IHJvdGF0ZSgtNDVkZWcpO1xyXG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSgtNDVkZWcpO1xyXG4gICAgLW8tdHJhbnNmb3JtOiByb3RhdGUoLTQ1ZGVnKTtcclxuICAgIC1tcy10cmFuc2Zvcm06IHJvdGF0ZSgtNDVkZWcpO1xyXG4gIH1cclxuICAuYXJyb3c6YWZ0ZXJ7XHJcbiAgICBjb250ZW50OiBcIlwiO1xyXG4gICAgaGVpZ2h0OiAzcHg7XHJcbiAgICB3aWR0aDogMzBweDtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpO1xyXG4gICAgLW1vei10cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZyk7XHJcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKTtcclxuICAgIC1vLXRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKTtcclxuICAgIC1tcy10cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZyk7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBib3R0b206IDE0cHg7XHJcbiAgfVxyXG4gIC5hcnJvdy5kaXNhYmxlZHtcclxuICAgIG9wYWNpdHk6IC40O1xyXG4gIH1cclxuICAuYXJyb3cuZGlzYWJsZWQ6aG92ZXJ7XHJcbiAgICBvcGFjaXR5OiAuNDtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICB9YF1cclxufSlcclxuXHJcbmV4cG9ydCBjbGFzcyBBcnJvd0NvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XHJcblxyXG5cclxuICBASW5wdXQoKSBkaXI6IHN0cmluZztcclxuICBASW5wdXQoKSBkaXNhYmxlZCA9IHRydWU7XHJcbiAgQElucHV0KCdjb2xvckNvbmZpZycpXHJcbiAgZ2V0IGNvbG9yQ29uZmlnKCk6IFVpQ2Fyb3VzZWxDb2xvckNvbmZpZyB7XHJcbiAgICByZXR1cm4gdGhpcy5fY29sb3JDb25maWc7XHJcbiAgfVxyXG4gIHNldCBjb2xvckNvbmZpZyh2YWx1ZTogVWlDYXJvdXNlbENvbG9yQ29uZmlnKSB7XHJcbiAgICB0aGlzLl9jb2xvckNvbmZpZyA9IHZhbHVlO1xyXG4gICAgdGhpcy5jcmVhdGVTdHlsZSgpO1xyXG4gIH1cclxuXHJcbiAgQE91dHB1dCgpIG9uQXJyb3dDbGljazogRXZlbnRFbWl0dGVyPGFueT4gPSBuZXcgRXZlbnRFbWl0dGVyPGFueT4oKTtcclxuXHJcbiAgcHVibGljIHN0eWxpbmc6IHN0cmluZztcclxuICBwdWJsaWMgc3R5bGVFbGVtZW50OiBhbnk7XHJcblxyXG4gIHByaXZhdGUgX2NvbG9yQ29uZmlnOiBVaUNhcm91c2VsQ29sb3JDb25maWc7XHJcblxyXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgX2VsOiBFbGVtZW50UmVmLCBwcml2YXRlIF9yZW5kZXJlcjI6IFJlbmRlcmVyMikgeyB9XHJcblxyXG4gIG5nT25Jbml0KCk6IHZvaWQge1xyXG4gICAgaWYgKCF0aGlzLl9jb2xvckNvbmZpZykge1xyXG4gICAgICB0aGlzLmNvbG9yQ29uZmlnID0gbmV3IFVpQ2Fyb3VzZWxDb2xvckNvbmZpZygpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgb25DbGljaygpIHtcclxuICAgIGlmICghdGhpcy5kaXNhYmxlZCkge1xyXG4gICAgICB0aGlzLm9uQXJyb3dDbGljay5lbWl0KCk7XHJcbiAgICAgIHRoaXMuY3JlYXRlU3R5bGUoKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIGNyZWF0ZVN0eWxlKCkge1xyXG4gICAgY29uc3Qgc3R5bGluZyA9IGBcclxuICAgICAgLmFycm93OjpiZWZvcmUsIC5hcnJvdzo6YWZ0ZXIge1xyXG4gICAgICAgIGJhY2tncm91bmQ6ICR7dGhpcy5jb2xvckNvbmZpZy5hcnJvd0NvbG9yfTtcclxuICAgICAgfVxyXG4gICAgICBgO1xyXG5cclxuICAgICAgaWYgKHRoaXMuc3R5bGVFbGVtZW50KSB7XHJcbiAgICAgICAgdGhpcy5fcmVuZGVyZXIyLnJlbW92ZUNoaWxkKHRoaXMuX3JlbmRlcmVyMi5wYXJlbnROb2RlKHRoaXMuc3R5bGVFbGVtZW50KSwgdGhpcy5zdHlsZUVsZW1lbnQpO1xyXG4gICAgICB9XHJcblxyXG4gICAgICB0aGlzLnN0eWxlRWxlbWVudCA9IHRoaXMuX3JlbmRlcmVyMi5jcmVhdGVFbGVtZW50KCdzdHlsZScpO1xyXG4gICAgICB0aGlzLnN0eWxlRWxlbWVudC5hcHBlbmRDaGlsZCh0aGlzLl9yZW5kZXJlcjIuY3JlYXRlVGV4dChzdHlsaW5nKSk7XHJcblxyXG4gICAgICB0aGlzLl9lbC5uYXRpdmVFbGVtZW50LmFwcGVuZENoaWxkKHRoaXMuc3R5bGVFbGVtZW50KTtcclxuICB9XHJcbn1cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG4iXX0=