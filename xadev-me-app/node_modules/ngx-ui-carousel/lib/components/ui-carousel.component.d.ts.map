{"version":3,"file":"ui-carousel.component.d.ts","sources":["ui-carousel.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { OnInit, EventEmitter, QueryList, ElementRef, AfterViewInit, Renderer2 } from '@angular/core';\r\nimport { UiCarouselItemComponent } from './ui-carousel-item.component';\r\nimport { UiCarouselColorConfig } from '../color-config.class';\r\nexport declare class UiCarouselComponent implements OnInit, AfterViewInit {\r\n    private el;\r\n    private renderer2;\r\n    height: string;\r\n    width: string;\r\n    speed: number;\r\n    autoPlay: boolean;\r\n    autoPlaySpeed: number;\r\n    infinite: boolean;\r\n    fade: boolean;\r\n    isDotsVisible: boolean;\r\n    isArrowsVisible: boolean;\r\n    isPrintButtonVisible: boolean;\r\n    colorConfig: UiCarouselColorConfig;\r\n    onChange: EventEmitter<any>;\r\n    printRequest: EventEmitter<any>;\r\n    items: QueryList<UiCarouselItemComponent>;\r\n    currentItemIndex: number;\r\n    interval: any;\r\n    private _width;\r\n    private firstItemIndex;\r\n    private lastItemIndex;\r\n    private isSliding;\r\n    constructor(el: ElementRef, renderer2: Renderer2);\r\n    ngOnInit(): void;\r\n    ngAfterViewInit(): void;\r\n    onPrintClick(): void;\r\n    next(): void;\r\n    prev(): void;\r\n    goTo(index: number): void;\r\n    rotateRightTo(index: number): void;\r\n    rotateLeftTo(index: number): void;\r\n    slideTo(index: number): void;\r\n    slideLeft(): void;\r\n    slideRight(): void;\r\n    slideToPrevPosition(): void;\r\n    disableTransition(): void;\r\n    enableTransition(): void;\r\n    getItemByIndex(index: number): UiCarouselItemComponent;\r\n    getIndexByItem(item: UiCarouselItemComponent): number;\r\n    rotateRightNTimes(n: number): void;\r\n    rotateLeftNTimes(n: number): void;\r\n    rotateRight(): void;\r\n    rotateLeft(): void;\r\n    fadeTo(index: number): void;\r\n    fadeRight(): void;\r\n    fadeLeft(): void;\r\n    isItemFirst(index: number): boolean;\r\n    isItemLast(index: number): boolean;\r\n    onResize(event: any): void;\r\n    rePosition(): void;\r\n    autoPlayFunction(shouldAutoPlay: boolean): void;\r\n}\r\n"]}