import { OnInit, EventEmitter, QueryList, ElementRef, AfterViewInit, Renderer2 } from '@angular/core';
import { UiCarouselItemComponent } from './ui-carousel-item.component';
import { UiCarouselColorConfig } from '../color-config.class';
export declare class UiCarouselComponent implements OnInit, AfterViewInit {
    private el;
    private renderer2;
    height: string;
    width: string;
    speed: number;
    autoPlay: boolean;
    autoPlaySpeed: number;
    infinite: boolean;
    fade: boolean;
    isDotsVisible: boolean;
    isArrowsVisible: boolean;
    isPrintButtonVisible: boolean;
    colorConfig: UiCarouselColorConfig;
    onChange: EventEmitter<any>;
    printRequest: EventEmitter<any>;
    items: QueryList<UiCarouselItemComponent>;
    currentItemIndex: number;
    interval: any;
    private _width;
    private firstItemIndex;
    private lastItemIndex;
    private isSliding;
    constructor(el: ElementRef, renderer2: Renderer2);
    ngOnInit(): void;
    ngAfterViewInit(): void;
    onPrintClick(): void;
    next(): void;
    prev(): void;
    goTo(index: number): void;
    rotateRightTo(index: number): void;
    rotateLeftTo(index: number): void;
    slideTo(index: number): void;
    slideLeft(): void;
    slideRight(): void;
    slideToPrevPosition(): void;
    disableTransition(): void;
    enableTransition(): void;
    getItemByIndex(index: number): UiCarouselItemComponent;
    getIndexByItem(item: UiCarouselItemComponent): number;
    rotateRightNTimes(n: number): void;
    rotateLeftNTimes(n: number): void;
    rotateRight(): void;
    rotateLeft(): void;
    fadeTo(index: number): void;
    fadeRight(): void;
    fadeLeft(): void;
    isItemFirst(index: number): boolean;
    isItemLast(index: number): boolean;
    onResize(event: any): void;
    rePosition(): void;
    autoPlayFunction(shouldAutoPlay: boolean): void;
}
