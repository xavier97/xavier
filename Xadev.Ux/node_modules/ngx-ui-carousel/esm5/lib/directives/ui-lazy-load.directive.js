/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Directive, Input, ElementRef, Renderer2 } from '@angular/core';
var UILazyloadDirective = /** @class */ (function () {
    function UILazyloadDirective(el, renderer) {
        this.el = el;
        this.renderer = renderer;
    }
    /**
     * @return {?}
     */
    UILazyloadDirective.prototype.load = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var img = this.el.nativeElement;
        if (img.src) {
            return;
        }
        img.src = this.imgUrl;
    };
    UILazyloadDirective.decorators = [
        { type: Directive, args: [{
                    selector: '[libUiLazyLoad]',
                    exportAs: 'ui-lazy-load'
                },] }
    ];
    /** @nocollapse */
    UILazyloadDirective.ctorParameters = function () { return [
        { type: ElementRef },
        { type: Renderer2 }
    ]; };
    UILazyloadDirective.propDecorators = {
        imgUrl: [{ type: Input, args: ['imgUrl',] }]
    };
    return UILazyloadDirective;
}());
export { UILazyloadDirective };
if (false) {
    /**
     * @type {?}
     * @private
     */
    UILazyloadDirective.prototype.imgUrl;
    /**
     * @type {?}
     * @private
     */
    UILazyloadDirective.prototype.el;
    /**
     * @type {?}
     * @private
     */
    UILazyloadDirective.prototype.renderer;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidWktbGF6eS1sb2FkLmRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC11aS1jYXJvdXNlbC8iLCJzb3VyY2VzIjpbImxpYi9kaXJlY3RpdmVzL3VpLWxhenktbG9hZC5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLFVBQVUsRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFeEU7SUFRRSw2QkFBb0IsRUFBYyxFQUFVLFFBQW1CO1FBQTNDLE9BQUUsR0FBRixFQUFFLENBQVk7UUFBVSxhQUFRLEdBQVIsUUFBUSxDQUFXO0lBQUcsQ0FBQzs7OztJQUU1RCxrQ0FBSTs7O0lBQVg7O1lBQ1UsR0FBRyxHQUFHLElBQUksQ0FBQyxFQUFFLENBQUMsYUFBYTtRQUNqQyxJQUFJLEdBQUcsQ0FBQyxHQUFHLEVBQUU7WUFDWCxPQUFPO1NBQ1I7UUFDRCxHQUFHLENBQUMsR0FBRyxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUM7SUFDMUIsQ0FBQzs7Z0JBaEJGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsaUJBQWlCO29CQUMzQixRQUFRLEVBQUUsY0FBYztpQkFDekI7Ozs7Z0JBTDBCLFVBQVU7Z0JBQUUsU0FBUzs7O3lCQVE3QyxLQUFLLFNBQUMsUUFBUTs7SUFXakIsMEJBQUM7Q0FBQSxBQWpCRCxJQWlCQztTQWJZLG1CQUFtQjs7Ozs7O0lBRTlCLHFDQUF3Qzs7Ozs7SUFFNUIsaUNBQXNCOzs7OztJQUFFLHVDQUEyQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpcmVjdGl2ZSwgSW5wdXQsIEVsZW1lbnRSZWYsIFJlbmRlcmVyMiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5cclxuQERpcmVjdGl2ZSh7XHJcbiAgc2VsZWN0b3I6ICdbbGliVWlMYXp5TG9hZF0nLFxyXG4gIGV4cG9ydEFzOiAndWktbGF6eS1sb2FkJ1xyXG59KVxyXG5leHBvcnQgY2xhc3MgVUlMYXp5bG9hZERpcmVjdGl2ZSB7XHJcbiAgLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOm5vLWlucHV0LXJlbmFtZVxyXG4gIEBJbnB1dCgnaW1nVXJsJykgcHJpdmF0ZSBpbWdVcmw6IHN0cmluZztcclxuXHJcbiAgY29uc3RydWN0b3IocHJpdmF0ZSBlbDogRWxlbWVudFJlZiwgcHJpdmF0ZSByZW5kZXJlcjogUmVuZGVyZXIyKSB7fVxyXG5cclxuICBwdWJsaWMgbG9hZCgpIHtcclxuICAgICAgY29uc3QgaW1nID0gdGhpcy5lbC5uYXRpdmVFbGVtZW50O1xyXG4gICAgICBpZiAoaW1nLnNyYykge1xyXG4gICAgICAgIHJldHVybjtcclxuICAgICAgfVxyXG4gICAgICBpbWcuc3JjID0gdGhpcy5pbWdVcmw7XHJcbiAgfVxyXG59XHJcbiJdfQ==