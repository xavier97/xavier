/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ViewChild, ElementRef, QueryList, Renderer2, ChangeDetectorRef, ContentChild, Input } from '@angular/core';
import { UILazyloadDirective } from '../directives/ui-lazy-load.directive';
import { UiCarouselColorConfig } from '../color-config.class';
export class UiCarouselItemComponent {
    /**
     * @param {?} renderer
     * @param {?} ref
     */
    constructor(renderer, ref) {
        this.renderer = renderer;
        this.ref = ref;
        this.currentPosition = 0;
        this.position = 0;
        this.colorConfig = new UiCarouselColorConfig();
    }
    /**
     * @param {?} position
     * @return {?}
     */
    moveTo(position) {
        this.renderer.setStyle(this.el.nativeElement, 'transform', 'translate3d(' + position + 'px, 0px, 0px)');
        this.renderer.setStyle(this.el.nativeElement, '-webkit-transform', 'translate3d(' + position + 'px, 0px, 0px)');
        this.renderer.setStyle(this.el.nativeElement, '-moz-transform', 'translate3d(' + position + 'px, 0px, 0px)');
        this.renderer.setStyle(this.el.nativeElement, '-o-transform', 'translate3d(' + position + 'px, 0px, 0px)');
        this.renderer.setStyle(this.el.nativeElement, '-ms-transform', 'translate3d(' + position + 'px, 0px, 0px)');
    }
    /**
     * @param {?} distance
     * @return {?}
     */
    moveBy(distance) {
        this.renderer.setStyle(this.el.nativeElement, 'transform', 'translate3d(' + distance + 'px, 0px, 0px)');
        this.renderer.setStyle(this.el.nativeElement, '-webkit-transform', 'translate3d(' + distance + 'px, 0px, 0px)');
        this.renderer.setStyle(this.el.nativeElement, '-moz-transform', 'translate3d(' + distance + 'px, 0px, 0px)');
        this.renderer.setStyle(this.el.nativeElement, '-o-transform', 'translate3d(' + distance + 'px, 0px, 0px)');
        this.renderer.setStyle(this.el.nativeElement, '-ms-transform', 'translate3d(' + distance + 'px, 0px, 0px)');
    }
    /**
     * @param {?} zIndex
     * @return {?}
     */
    setzIndex(zIndex) {
        this.renderer.setStyle(this.el.nativeElement, 'z-index', zIndex);
    }
    /**
     * @return {?}
     */
    disableTransition() {
        this.renderer.setStyle(this.el.nativeElement, 'transition', 'none');
        this.renderer.setStyle(this.el.nativeElement, '-moz-transition', 'none');
        this.renderer.setStyle(this.el.nativeElement, '-webkit-transition', 'none');
        this.renderer.setStyle(this.el.nativeElement, '-o-transition', 'none');
        this.renderer.setStyle(this.el.nativeElement, '-ms-transition', 'none');
    }
    /**
     * @return {?}
     */
    enableTransition() {
        this.renderer.setStyle(this.el.nativeElement, 'transition', 'transform');
        this.renderer.setStyle(this.el.nativeElement, '-moz-transition', 'transform');
        this.renderer.setStyle(this.el.nativeElement, '-webkit-transition', 'transform');
        this.renderer.setStyle(this.el.nativeElement, '-o-transition', 'transform');
        this.renderer.setStyle(this.el.nativeElement, '-ms-transition', 'transform');
        this.renderer.setStyle(this.el.nativeElement, 'transition-duration', this.speed + 'ms');
        this.renderer.setStyle(this.el.nativeElement, '-moz-transition-duration', this.speed + 'ms');
        this.renderer.setStyle(this.el.nativeElement, '-webkit-transition-duration', this.speed + 'ms');
        this.renderer.setStyle(this.el.nativeElement, '-o-transition-duration', this.speed + 'ms');
        this.renderer.setStyle(this.el.nativeElement, '-ms-transition-duration', this.speed + 'ms');
    }
    /**
     * @param {?} duration
     * @return {?}
     */
    fadeOut(duration) {
        return new Promise((/**
         * @param {?} resolve
         * @return {?}
         */
        resolve => {
            this.renderer.setStyle(this.el.nativeElement, 'opacity', '0');
            setTimeout((/**
             * @return {?}
             */
            () => {
                this.renderer.setStyle(this.el.nativeElement, 'opacity', '1');
                resolve();
            }), duration);
        }));
    }
    /**
     * @param {?} duration
     * @return {?}
     */
    fadeIn(duration) {
        this.renderer.setStyle(this.el.nativeElement, 'opacity', '0');
        setTimeout((/**
         * @return {?}
         */
        () => {
            this.renderer.setStyle(this.el.nativeElement, 'transition', 'opacity ' + duration + 'ms');
            this.renderer.setStyle(this.el.nativeElement, 'opacity', '1');
        }), 0);
    }
    /**
     * @return {?}
     */
    lazyLoad() {
        this.lazyLoadedImages.forEach((/**
         * @param {?} img
         * @return {?}
         */
        (img) => {
            img.load();
        }));
    }
}
UiCarouselItemComponent.decorators = [
    { type: Component, args: [{
                // tslint:disable-next-line:component-selector
                selector: 'ngx-ui-carousel-item',
                template: `
    <div #carouselItem
        [ngStyle]="{'background-color': backgroundColor ? backgroundColor : colorConfig.itemBackgroundColor}"
        class="ui-carousel-item fade" tabindex="-1"
        style="outline: none">
      <ng-content></ng-content>
    </div>
  `,
                styles: [`
  :host {
    display:block!important;
  }

  .ui-carousel-item{
    user-select: none;
    -moz-user-select: none;
    -khtml-user-select: none;
    -webkit-user-select: none;
    -o-user-select: none;
    -ms-user-select: none;
  }

  .transition{
    transition: transform;
    -moz-transition: transform;
    -webkit-transition: transform;
    -o-transition: transform;
    -ms-transition: transform;
    transition-timing-function: ease;
    -moz-transition-timing-function: ease;
    -o-transition-timing-function: ease;
    -ms-transition-timing-function: ease;
  }

  .ui-carousel-item{
    // height: 100%;
    width: 100%;
    position: absolute;
    overflow: hidden;
  }

  .fade{
    opacity: 1;
    -webkit-transition: opacity .5s ease-in;
    -moz-transition: opacity .5s ease-in;
    -ms-transition: opacity .5s ease-in;
    -o-transition: opacity .5s ease-in;
    transition: opacity .5s ease-in;
  }

  .fade-out{
    opacity: 0;
  }
  `]
            }] }
];
/** @nocollapse */
UiCarouselItemComponent.ctorParameters = () => [
    { type: Renderer2 },
    { type: ChangeDetectorRef }
];
UiCarouselItemComponent.propDecorators = {
    el: [{ type: ViewChild, args: ['carouselItem',] }],
    lazyLoadedImages: [{ type: ContentChild, args: [UILazyloadDirective,] }],
    backgroundColor: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    UiCarouselItemComponent.prototype.el;
    /** @type {?} */
    UiCarouselItemComponent.prototype.lazyLoadedImages;
    /** @type {?} */
    UiCarouselItemComponent.prototype.backgroundColor;
    /** @type {?} */
    UiCarouselItemComponent.prototype.speed;
    /** @type {?} */
    UiCarouselItemComponent.prototype.currentPosition;
    /** @type {?} */
    UiCarouselItemComponent.prototype.position;
    /** @type {?} */
    UiCarouselItemComponent.prototype.zIndex;
    /** @type {?} */
    UiCarouselItemComponent.prototype.colorConfig;
    /**
     * @type {?}
     * @private
     */
    UiCarouselItemComponent.prototype.renderer;
    /**
     * @type {?}
     * @private
     */
    UiCarouselItemComponent.prototype.ref;
}
//# sourceMappingURL=data:application/json;base64,